export default {
  common: {
    confirm: 'Confirm',
    cancel: 'Cancel',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    create: 'Create',
    search: 'Search',
    reset: 'Reset',
    submit: 'Submit',
    back: 'Back',
    loading: 'Loading...',
    noData: 'No Data',
    success: 'Success',
    error: 'Error',
    warning: 'Warning',
    info: 'Info',
    yes: 'Yes',
    no: 'No',
    all: 'All',
    name: 'Name',
    description: 'Description',
    createdAt: 'Created At',
    updatedAt: 'Updated At',
    actions: 'Actions',
    status: 'Status',
    type: 'Type',
    value: 'Value',
    parameters: 'Parameters',
    code: 'Code',
    backToList: 'Back to List',
    saveChanges: 'Save Changes',
    resetForm: 'Reset Form',
    createSuccess: 'Created Successfully',
    updateSuccess: 'Updated Successfully',
    deleteSuccess: 'Deleted Successfully',
    createFailed: 'Creation Failed',
    updateFailed: 'Update Failed',
    deleteFailed: 'Deletion Failed',
    confirmDelete: 'Confirm Delete',
    confirmDeleteMessage: 'Are you sure you want to delete? This action cannot be undone.',
    loadFailed: 'Load Failed',
    atLeastOneIndicator: 'Please add at least one indicator',
    atLeastOneCondition: 'Please add at least one trading condition',
    createNewStrategy: 'Create New Trading Strategy',
    editStrategyConfig: 'Edit Strategy Configuration and Parameters',
    to: 'to'
  },

  nav: {
    dashboard: 'Dashboard',
    indicators: 'Indicators',
    strategies: 'Strategies',
    backtest: 'Backtest',
    tradingPairs: 'Trading Pairs',
    timeframes: 'Timeframes',
    settings: 'Settings'
  },

  dashboard: {
    title: 'Dashboard',
    subtitle: 'View system overview and quick actions',
    quickActions: 'Quick Actions',
    createIndicator: 'Create Indicator',
    createStrategy: 'Create Strategy',
    createBacktest: 'Create Backtest',
    manageTradingPairs: 'Manage Trading Pairs',
    recentBacktests: 'Recent Backtests',
    viewAllBacktests: 'View All Backtests',
    noBacktestTitle: 'No Backtest Records',
    noBacktestDescription: 'Start by creating your first backtest',
    noBacktestAction: 'Create Backtest',
    runningBacktests: 'Running Backtests',
    strategy: 'Strategy',
    tradingPair: 'Trading Pair',
    returnRate: 'Return Rate',
    status: 'Status',
    createdAt: 'Created At'
  },

  theme: {
    light: 'Light Theme',
    dark: 'Dark Theme',
    toggle: 'Toggle Theme'
  },

  language: {
    zhCN: '简体中文',
    enUS: 'English',
    toggle: 'Toggle Language'
  },

  indicators: {
    title: 'Indicators Management',
    list: 'Indicators List',
    create: 'Create Indicator',
    edit: 'Edit Indicator',
    detail: 'Indicator Detail',
    name: 'Indicator Name',
    description: 'Description',
    calculationCode: 'Calculation Code',
    parameters: 'Parameters',
    parameterName: 'Parameter Name',
    parameterType: 'Parameter Type',
    defaultValue: 'Default Value',
    addParameter: 'Add Parameter',
    removeParameter: 'Remove Parameter',
    calculate: 'Calculate',
    uploadData: 'Upload Data',
    useSystemData: 'Use System Data',
    selectTradingPair: 'Select Trading Pair',
    selectTimeframe: 'Select Timeframe',
    startTime: 'Start Time',
    endTime: 'End Time',
    subtitle: 'Manage and create technical indicators',
    createNewIndicator: 'Create new technical indicator',
    noDataTitle: 'No Indicators',
    noDataDescription: 'Start by creating your first technical indicator',
    noDataAction: 'Create Indicator',
    createSuccess: 'Indicator created successfully',
    createFailed: 'Failed to create indicator',
    deleteSuccess: 'Indicator deleted successfully',
    deleteFailed: 'Deletion failed',
    confirmDeleteMessage: 'Are you sure you want to delete indicator "{name}"? This action cannot be undone.',
    parameterTypes: {
      number: 'Number',
      string: 'String',
      boolean: 'Boolean'
    }
  },

  strategies: {
    title: 'Strategies Management',
    list: 'Strategies List',
    create: 'Create Strategy',
    edit: 'Edit Strategy',
    detail: 'Strategy Detail',
    name: 'Strategy Name',
    description: 'Description',
    positionType: 'Position Type',
    buyFee: 'Buy Fee',
    sellFee: 'Sell Fee',
    liquidationThreshold: 'Liquidation Threshold',
    takeProfitRatio: 'Take Profit Ratio',
    stopLossRatio: 'Stop Loss Ratio',
    indicators: 'Indicators',
    conditions: 'Conditions',
    addIndicator: 'Add Indicator',
    addCondition: 'Add Condition',
    conditionBuilder: 'Condition Builder',
    customCode: 'Custom Code',
    basicInfo: 'Basic Information',
    riskManagement: 'Risk Management',
    tradingConditions: 'Trading Conditions',
    selectPositionType: 'Select Position Type',
    takeProfitRatioLabel: 'Take Profit Ratio (%)',
    stopLossRatioLabel: 'Stop Loss Ratio (%)',
    takeProfitRatioPlaceholder: 'Optional, greater than 100',
    stopLossRatioPlaceholder: 'Optional, between 0-100',
    takeProfitRatioTip: 'Optional configuration, automatically take profit when profit reaches this ratio',
    stopLossRatioTip: 'Optional configuration, automatically stop loss when loss reaches this ratio',
    conditionLogicTitle: 'Condition Logic Description',
    conditionLogicAnd: 'Conditions within the same group use AND logic (all conditions must be met)',
    conditionLogicOr: 'Different groups use OR logic (any group can be satisfied)',
    noConditionsText: 'No trading conditions added yet, please click the button above to add',
    conditionNumber: 'Condition',
    conditionGroup: 'Group',
    removeCondition: 'Remove',
    conditionType: 'Condition Type',
    executeAction: 'Execute Action',
    conditionGroupLabel: 'Condition Group',
    priority: 'Priority',
    indicatorIndex: 'Indicator Index',
    comparisonType: 'Comparison Type',
    operator: 'Operator',
    comparedIndicator: 'Compared Indicator',
    constantValue: 'Constant Value',
    selectIndicator: 'Select Indicator',
    selectAction: 'Select Action',
    groupNumber: 'Group Number',
    inputConstantValue: 'Input Constant Value',
    customCodeTitle: 'Custom Code Description',
    customCodeTip1: 'Use JavaScript to write custom trading condition logic',
    customCodeTip2: 'Available variables: indicators (indicator array), price (current price), volume (trading volume)',
    customCodeTip3: 'Return true if condition is met, false if condition is not met',
    customCodeLabel: 'Custom Code',
    positionTypes: {
      long: 'Long',
      short: 'Short',
      both: 'Both'
    },
    operators: {
      '>': 'Greater Than',
      '<': 'Less Than',
      '>=': 'Greater Than or Equal',
      '<=': 'Less Than or Equal',
      '==': 'Equal',
      '!=': 'Not Equal'
    },
    actions: {
      buy: 'Buy',
      sell: 'Sell',
      none: 'None'
    },
    conditionTypes: {
      value: 'Value Condition',
      crossover: 'Crossover Condition',
      custom: 'Custom Code'
    },
    comparisonTypes: {
      indicator: 'Compare with Indicator',
      constant: 'Compare with Constant'
    },
    // New translation keys
    indicatorConfig: 'Indicator Configuration',
    noIndicatorsAdded: 'No indicators added yet, please click the button above to add',
    indicatorTitle: 'Indicator',
    removeIndicator: 'Remove',
    selectIndicatorPlaceholder: 'Select Indicator',
    parameterConfig: 'Parameter Configuration',
    inputParameterPlaceholder: 'Please enter {name}',
    usedIndicators: 'Used Indicators',
    noIndicatorsConfigured: 'No indicators configured',
    noIndicatorsDescription: 'This strategy has not added any technical indicators yet',
    useDefaultParams: 'Use default parameters',
    noConditionsConfigured: 'No trading conditions configured',
    noConditionsDescription: 'This strategy has not set any trading conditions yet',
    buyConditions: 'Buy Conditions',
    sellConditions: 'Sell Conditions',
    noActionConditions: 'No Action Conditions',
    conditionsCount: 'conditions',
    indicatorPath: 'Indicator Path',
    comparisonValue: 'Comparison Value',
    customCodeCondition: 'Custom Code',
    noCode: '// No code',
    configStatus: 'Configuration Status',
    configComplete: 'Configuration Complete',
    configIncomplete: 'Configuration Incomplete',
    configPartial: 'Configuration Partially Complete',
    notConfigured: 'Not Configured',
    noDescription: 'No description',
    riskWarning: 'Risk Warning',
    buyFeeLabel: 'Buy Fee',
    sellFeeLabel: 'Sell Fee',
    liquidationThresholdLabel: 'Liquidation Threshold',
    takeProfitRatioLabel2: 'Take Profit Ratio',
    stopLossRatioLabel2: 'Stop Loss Ratio',
    strategyName: 'Strategy Name',
    strategyId: 'Strategy ID',
    backtestHistory: 'Backtest History',
    createBacktest: 'Create Backtest',
    noBacktestRecords: 'No backtest records',
    noBacktestDescription: 'This strategy has not been backtested yet',
    timeRange: 'Time Range',
    returnRate: 'Return Rate',
    viewDetails: 'View Details',
    strategyNotFound: 'Strategy Not Found',
    strategyNotFoundDescription: 'The specified strategy could not be found, it may have been deleted or the ID is incorrect',
    riskWarnings: {
      lowLiquidation: 'Liquidation threshold is too low, there is a risk of principal loss',
      noStopLoss: 'No stop loss ratio set, it is recommended to add stop loss protection',
      noTakeProfit: 'No take profit ratio set, it is recommended to add take profit strategy',
      highFees: 'Transaction costs are high and may affect returns'
    },
    parameterNames: {
      period: 'Period',
      fastPeriod: 'Fast Period',
      slowPeriod: 'Slow Period',
      signalPeriod: 'Signal Period',
      upperMultiplier: 'Upper Multiplier',
      lowerMultiplier: 'Lower Multiplier',
      kValue: 'K Value',
      dValue: 'D Value',
      jValue: 'J Value',
      overboughtLine: 'Overbought Line',
      oversoldLine: 'Oversold Line'
    }
  },

  backtest: {
    title: 'Backtest Management',
    list: 'Backtest List',
    create: 'Create Backtest',
    detail: 'Backtest Detail',
    result: 'Backtest Result',
    trades: 'Trade Records',
    selectStrategy: 'Select Strategy',
    selectTradingPair: 'Select Trading Pair',
    selectTimeframe: 'Select Timeframe',
    startTime: 'Start Time',
    endTime: 'End Time',
    initialCapital: 'Initial Capital',
    earlyStopThreshold: 'Early Stop Threshold',
    positionDivision: 'Position Division',
    finalCapital: 'Final Capital',
    totalReturn: 'Total Return',
    returnRate: 'Return Rate',
    maxDrawdown: 'Max Drawdown',
    sharpeRatio: 'Sharpe Ratio',
    totalTrades: 'Total Trades',
    winningTrades: 'Winning Trades',
    losingTrades: 'Losing Trades',
    winRate: 'Win Rate',
    subtitle: 'Manage and create backtest tasks',
    createNewBacktest: 'Create new backtest task',
    noDataTitle: 'No Backtest Records',
    noDataDescription: 'Start by creating your first backtest task',
    noDataAction: 'Create Backtest',
    createSuccess: 'Backtest task created successfully, running in background...',
    createFailed: 'Failed to create backtest',
    deleteSuccess: 'Backtest record deleted successfully',
    deleteFailed: 'Deletion failed',
    confirmDeleteMessage: 'Are you sure you want to delete this backtest record? This action cannot be undone.',
    status: {
      running: 'Running',
      completed: 'Completed',
      failed: 'Failed'
    },
    trade: {
      timestamp: 'Time',
      type: 'Type',
      price: 'Price',
      quantity: 'Quantity',
      fee: 'Fee',
      pnl: 'P&L'
    }
  },

  tradingPairs: {
    title: 'Trading Pairs Management',
    subtitle: 'Manage trading pair configurations',
    symbol: 'Symbol',
    baseCurrency: 'Base Currency',
    quoteCurrency: 'Quote Currency',
    create: 'Create Trading Pair',
    noDataTitle: 'No Trading Pairs',
    noDataDescription: 'Start by creating your first trading pair',
    noDataAction: 'Create Trading Pair',
    createSuccess: 'Trading pair created successfully',
    createFailed: 'Failed to create trading pair',
    deleteSuccess: 'Trading pair deleted successfully',
    deleteFailed: 'Deletion failed',
    confirmDeleteMessage: 'Are you sure you want to delete trading pair "{symbol}"? This action cannot be undone.'
  },

  timeframes: {
    title: 'Timeframes Management',
    subtitle: 'Manage timeframe configurations',
    name: 'Timeframe Name',
    intervalMs: 'Interval (ms)',
    create: 'Create Timeframe',
    noDataTitle: 'No Timeframes',
    noDataDescription: 'Start by creating your first timeframe',
    noDataAction: 'Create Timeframe',
    createSuccess: 'Timeframe created successfully',
    createFailed: 'Failed to create timeframe',
    deleteSuccess: 'Timeframe deleted successfully',
    deleteFailed: 'Deletion failed',
    confirmDeleteMessage: 'Are you sure you want to delete timeframe "{name}"? This action cannot be undone.',
    commonValues: 'Common values: 1min=60000, 5min=300000, 1hour=3600000, 1day=86400000',
    timeUnits: {
      days: 'days',
      hours: 'hours',
      minutes: 'minutes',
      seconds: 'seconds'
    },
    createFirstTimeframe: 'Create First Timeframe',
    noTimeframes: 'No Timeframes',
    createTimeframe: 'Create Timeframe',
  },

  validation: {
    required: 'This field is required',
    minLength: 'Minimum {min} characters required',
    maxLength: 'Maximum {max} characters allowed',
    min: 'Minimum value is {min}',
    max: 'Maximum value is {max}',
    email: 'Please enter a valid email address',
    number: 'Please enter a valid number',
    positive: 'Please enter a positive number',
    range: 'Please enter a value between {min} and {max}',
    takeProfitRatioError: 'Take profit ratio must be greater than 100',
    stopLossRatioError: 'Stop loss ratio must be between 0-100',
    optionalField: 'Optional field, can be empty'
  },

  settings: {
    title: 'System Settings',
    subtitle: 'System settings and preferences',
    appearance: 'Appearance Settings',
    themeMode: 'Theme Mode',
    themeDescription: 'Choose light or dark theme',
    dark: 'Dark',
    light: 'Light',
    language: 'Language Settings',
    languageDescription: 'Select interface display language',
    apiSettings: 'API Settings',
    apiBaseUrl: 'API Base URL',
    apiDescription: 'Backend API server address',
    testConnection: 'Test Connection',
    connectionSuccess: 'Connection Successful',
    connectionFailed: 'Connection Failed',
    apiUpdated: 'API address updated, restart application to take effect',
    systemInfo: 'System Information',
    version: 'Version',
    buildTime: 'Build Time',
    browser: 'Browser',
    screenResolution: 'Screen Resolution',
    themeSwitchedDark: 'Switched to dark theme',
    themeSwitchedLight: 'Switched to light theme',
    languageUpdated: 'Language settings updated'
  }
}